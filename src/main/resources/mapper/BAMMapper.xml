<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.onoff.wechatofficialaccount.mapper.BAMMapper">
    <select id="getAdmin" resultType="com.onoff.wechatofficialaccount.entity.BAM.Admin">
       SELECT * FROM admin  WHERE account=#{a} AND password=#{b}
    </select>

    <select id="getUser" resultType="com.onoff.wechatofficialaccount.entity.User"
            resultMap="getUserMap">
       SELECT * FROM user  WHERE openid=#{openId}
    </select>
    <resultMap id="getUserMap" type="com.onoff.wechatofficialaccount.entity.User">
        <result property="openId" column="openid"/>
        <result property="nickName" column="nickname"/>
        <result property="sex" column="sex"/>
        <result property="headImgUrl" column="headimgurl"/>
        <result property="subScribeTime" column="subscribe_time"/>
        <result property="subscribeScene" column="subscribe_scene"/>
        <result property="qrScene" column="qr_scene"/>
        <result property="qrSceneStr" column="qr_scene_str"/>
        <result property="unionId" column="unionid"/>
    </resultMap>

    <select id="getMaterial" resultType="com.onoff.wechatofficialaccount.entity.BAM.Material"
            resultMap="getMaterialMap">
       SELECT * FROM material
    </select>
    <resultMap id="getMaterialMap" type="com.onoff.wechatofficialaccount.entity.BAM.Material">
        <result property="mediaId" column="media_id"/>
        <result property="url" column="url"/>
    </resultMap>

    <insert id="saveMaterial" parameterType="com.onoff.wechatofficialaccount.entity.BAM.Material">
        INSERT INTO material(media_id,url)VALUES(#{mediaId},#{url})
    </insert>

    <delete id="delMaterial" parameterType="String">
        DELETE FROM material WHERE media_id=#{mediaId}
    </delete>

    <insert id="saveRelation" parameterType="String">
        INSERT INTO relation(openid,unionid,time)VALUES(#{a},#{b},#{c})
    </insert>

    <select id="getRelation" resultType="com.onoff.wechatofficialaccount.entity.BAM.Relation"
            resultMap="getRelationMap">
       SELECT * FROM relation where unionid=#{unionId}
    </select>

    <resultMap id="getRelationMap" type="com.onoff.wechatofficialaccount.entity.BAM.Relation">
        <result property="id" column="id"/>
        <result property="openId" column="openid"/>
        <result property="unionId" column="unionid"/>
        <result property="rType" column="rtype"/>
    </resultMap>

    <delete id="delRelation" parameterType="String">
        DELETE FROM relation WHERE unionid=#{unionId}
    </delete>
    <update id="putRelation">
        update relation set rtype=#{a},time=#{c} where unionid=#{b}
    </update>

    <insert id="saveIntegral">
        insert into integral(openid,record,source,time)values (#{a},#{b},#{c},#{d})
    </insert>
    <select id="getIntegral" resultType="java.lang.Integer">
      SELECT SUM(record) FROM integral WHERE openid=#{openId}
    </select>

    <select id="getIntegralUser" resultType="java.lang.Integer">
      SELECT count(1) FROM integral WHERE openid=#{openId}
    </select>

    <select id="getLeaderboard" resultType="com.onoff.wechatofficialaccount.entity.VO.Leaderboard"
            resultMap="getLeaderboardMap">
SELECT
	@i := @i + 1 AS ranking,
	u.nickname AS nickname,
	u.headimgurl AS headimgurl,
	i.record AS record
FROM
	( SELECT @i := 0 ) t2,
	( SELECT openid, SUM( record ) AS record FROM integral GROUP BY openid ) i
	JOIN `user` u ON u.openid = i.openid
ORDER BY
	record DESC
	LIMIT 10;
    </select>

    <resultMap id="getLeaderboardMap" type="com.onoff.wechatofficialaccount.entity.VO.Leaderboard">
        <result property="ranking" column="ranking"/>
        <result property="nickName" column="nickname"/>
        <result property="headImgUrl" column="headimgurl"/>
        <result property="record" column="record"/>
    </resultMap>

    <select id="getRanking" resultType="com.onoff.wechatofficialaccount.entity.VO.Leaderboard"
            resultMap="getLeaderboardMap">
SELECT
	i.num AS ranking,
	u.nickname AS nickname,
	u.headimgurl AS headimgurl,
	i.record AS record
FROM
	(
	SELECT
		@i := @i + 1 AS num,
		i.openid AS openid,
		i.record AS record
	FROM
		( SELECT openid, SUM( record ) AS record FROM integral GROUP BY openid ORDER BY record DESC ) i,
		( SELECT @i := 0 ) t2
	GROUP BY
		i.openid
	ORDER BY
		num
	) i
	JOIN `user` u ON u.openid = i.openid
WHERE
	i.openid = #{openId}
ORDER BY
	record DESC;
    </select>
</mapper>